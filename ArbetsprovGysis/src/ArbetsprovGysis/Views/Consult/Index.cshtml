@model List<Konsult>

<div ng-app="angularApp">
    <div ng-controller="editController" class="col-xs-12">
        <div class="col-xs-6">
            @foreach (var item in Model)
            {
                    <div class="col-xs-4">@item.Name</div><div class="col-xs-4">@item.ReqruitmentDate</div><div class="col-xs-4"><input type="button" value="edit" class="btn consultEdit" data-name="@item.Name" data-req="@item.ReqruitmentDate" data-id="@item.ID" /><input type="button" value="Delete" class="btn consultRemove btn-danger" onclick="location.href='@Url.Action("RemoveConsult", "Consult", new { consultIdToRemove = item.ID })'" /></div>
            }
        </div>
        <div id="editClass" class="col-xs-6">
            @await Component.InvokeAsync("EditConsult")
        </div>
    </div>
    <div>
        <div class="col-xs-6">
            @await Component.InvokeAsync("AddConsult")
        </div>
    </div>
</div>
<script>

    var app = angular.module('angularApp', [])
    app.controller("editController", function ($scope) {


    })

    $(document).ready(function () {
        $("#editClass").hide();
        var name;
        var reqDate;
        var id;

        $(".consultEdit").click(function () {
            name = $(this).attr("data-name");
            reqDate = $(this).attr("data-req");
            id = $(this).attr("data-id");

            $(this).parent().parent().next("#editClass").toggle();
            $(".inputName").prop("value", name);
            $(".inputReq").prop("value", reqDate);
            $(".inputId").prop("value", id);
        });
    })
</script>


